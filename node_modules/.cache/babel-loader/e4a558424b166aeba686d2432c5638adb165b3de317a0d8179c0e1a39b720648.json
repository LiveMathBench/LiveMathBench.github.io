{"ast":null,"code":"import React,{useMemo,useRef,useEffect,useState}from\"react\";import Grid from'@mui/material/Grid';import{AgGridReact}from\"ag-grid-react\";import\"ag-grid-community/styles/ag-grid.css\";// Core CSS\nimport\"ag-grid-community/styles/ag-theme-quartz.css\";// Theme\nimport\"./LeaderboardComp.css\";import Box from\"@mui/material/Box\";import Slider from\"@mui/material/Slider\";import{ThemeProvider,createTheme}from\"@mui/material/styles\";import CssBaseline from\"@mui/material/CssBaseline\";import{getColumnDefs,getDateMarksFromTimestamps,getLeaderboard}from\"./leaderboardLib\";import\"./LeaderboardAgGrid.css\";import styles from\"./Leaderboard.module.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const FONT_FAMILY=\"'JetBrains Mono', monospace\";const Leaderboard=/*#__PURE__*/React.memo(function LeaderboardComponent(props){// args from Streamlit\nlet args=props.args;const{performances,models,date_marks}=args;const[isMobileCompressed,setIsMobileCompressed]=useState(window.innerWidth<768);// const [data, setData] = useState(args);\n// console.log(props)\n// console.log(performances)\n// console.log(models)\nconst modelsDict=useMemo(()=>{return models.reduce((acc,model)=>{acc[model.model_repr]=model;return acc;},{});},[models]);// ********* DateSlider *********\n// const dateMarks = getDateMarksFromTimestamps(date_marks)\nconst[dateMarks,setDateMarks]=React.useState(()=>getDateMarksFromTimestamps(date_marks));useEffect(()=>{// console.log('Component re-rendered due to changes in date_marks:', date_marks);\nsetDateMarks(getDateMarksFromTimestamps(date_marks));},[date_marks]);const[dateStartAndEnd,setDateStartAndEnd]=React.useState([dateMarks[4].value,// Right now, this is 2023-05-01\ndateMarks[dateMarks.length-1].value]);const dateSliderHandleChange=(event,newValue)=>{const newValueArray=newValue;setDateStartAndEnd(newValueArray);const newDf=getLeaderboard(performances,models,newValueArray[0],newValueArray[1]);const newRowData=[];const res=gridRef.current.api.forEachNode(function(node){// Identify by the \"Model\" field\nconst dfData=newDf.find(row=>row[\"Model\"]===node.data[\"Model\"]);const newData=node.data;for(const key in dfData){newData[key]=dfData[key];}newRowData.push(newData);});const resTransaction=gridRef.current.api.applyTransaction({update:newRowData});};function dateLabelFormat(value){const index=dateMarks.findIndex(mark=>mark.value===value);return dateMarks[index].label;}const dateAriaText=dateLabelFormat;// ********* AgGrid *********\n// const leaderboard = getLeaderboard(\n//   performances,\n//   models,\n//   dateStartAndEnd[0],\n//   dateStartAndEnd[1]\n// )\nconst leaderboard=useMemo(()=>{return getLeaderboard(performances,models,dateStartAndEnd[0],dateStartAndEnd[1]);},[performances,models,dateStartAndEnd]);if(isMobileCompressed){// remove columns from leaderboard\n// remove Easy-Pass@1, Medium-Pass@1, Hard-Pass@1\n// will delete throw error if column not found\nleaderboard.forEach(row=>{delete row[\"Middle-School-Pass@1\"];delete row[\"High-School-Pass@1\"];delete row[\"College-Pass@1\"];delete row[\"High-School-Olympics-Pass@1\"];delete row[\"Others-Pass@1\"];// delete row[\"Pass@1 (no COT)\"];\n});}// console.log(leaderboard)\nconst numProblems=performances.filter(result=>result[\"model\"]===\"Qwen2.5-Math-7B-Instruct\"&&result[\"date\"]>=dateStartAndEnd[0]&&result[\"date\"]<=dateStartAndEnd[1]).length;// df is an array of objects\n// Get the columns of df\nconst columnNames=useMemo(()=>{return Object.keys(leaderboard[0]);},[leaderboard]);// Object.keys(leaderboard[0])\nconst defaultColDef=useMemo(()=>{return{flex:1};},[]);const rowClassRules=useMemo(()=>{return{[styles.leaderboardModelContaminated]:params=>params.data[\"Contaminated\"]};},[]);const gridRef=useRef();const[rowData,setRowData]=useState(leaderboard);useEffect(()=>{// console.log('Component re-rendered due to changes in leaderboard:', leaderboard);\nsetRowData(leaderboard);},[leaderboard]);const[columnDefs,setColumnDefs]=useState(getColumnDefs(columnNames,modelsDict));useEffect(()=>{// console.log('Component re-rendered due to changes in column:', columnNames, modelsDict);\nsetColumnDefs(getColumnDefs(columnNames,modelsDict));},[columnNames,modelsDict]);// console.log(columnNames, modelsDict);\n// ********* Styles and return *********\nconst muiTheme=createTheme({palette:{mode:props.theme.base},typography:{fontFamily:FONT_FAMILY}});const agGridTheme=props.theme.base===\"dark\"?\"ag-theme-quartz-dark\":\"ag-theme-quartz\";const gridStyle=useMemo(()=>({height:\"\".concat(Math.min(42*rowData.length,1000),\"px\"),// Adjust 600 to your desired max height\n// height: \"100%\",\n\"--ag-font-family\":FONT_FAMILY,// minWidth: \"760px\",\n// maxWidth: \"100%\",\n// height: \"1250px\",\noverflow:\"auto\",margin:\"auto\"}),[rowData]);const autoSizeStrategy={type:'fitCellContents'};let message=\"\".concat(numProblems,\" problems selected in the current time window.\");if(numProblems===0){message=\"No problems selected in the current time window. Please select a different time window. \";}else if(numProblems<100){message+=\" Less than 100 problems selected. We recommend a larger time-window to get a more accurate leaderboard.\";}else{message+=\"You can change start or end date to change the time window.\";}message+=\"<br><br>We estimate cutoff dates based on release date and performance variation. Models highlighted in red are likely contaminated on some fraction of the problems in the given time-window. Feel free to adjust the slider to see the leaderboard at different time windows. Please offer feedback if you find any issues!\";return/*#__PURE__*/_jsxs(\"div\",{style:{width:\"100%\",height:\"100%\"},children:[/*#__PURE__*/_jsxs(ThemeProvider,{theme:muiTheme,children:[/*#__PURE__*/_jsx(CssBaseline,{}),/*#__PURE__*/_jsx(\"div\",{style:{display:\"flex\",justifyContent:\"center\"},children:/*#__PURE__*/_jsx(\"b\",{children:message.split(\"<br>\").map((line,index)=>/*#__PURE__*/_jsxs(React.Fragment,{children:[line,/*#__PURE__*/_jsx(\"br\",{})]},index))})}),/*#__PURE__*/_jsx(Box,{sx:{width:\"100%\"},px:6,pt:5,pb:2,children:/*#__PURE__*/_jsx(Grid,{container:true,justifyContent:\"center\",children:/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Slider,{\"aria-label\":\"Date Slider\",value:dateStartAndEnd,onChange:dateSliderHandleChange,valueLabelFormat:dateLabelFormat,getAriaValueText:dateAriaText,step:null,valueLabelDisplay:\"on\",marks:dateMarks,min:dateMarks[0].value,max:dateMarks[dateMarks.length-1].value})})})})]}),/*#__PURE__*/_jsx(\"div\",{style:{display:numProblems===0?\"none\":\"flex\",flexDirection:\"column\",alignItems:\"center\"},children:/*#__PURE__*/_jsx(\"div\",{style:{display:\"flex\",flexDirection:\"column\",alignItems:\"center\",width:\"100%\"},id:\"flexGridWrapper\",children:/*#__PURE__*/_jsxs(\"div\",{style:{flexGrow:\"1\",width:\"100%\",display:\"flex\",justifyContent:\"center\"},children:[\" \",/*#__PURE__*/_jsx(\"div\",{style:gridStyle,className:agGridTheme,children:/*#__PURE__*/_jsx(AgGridReact,{ref:gridRef,rowData:rowData,columnDefs:columnDefs,defaultColDef:defaultColDef,rowClassRules:rowClassRules,rowSelection:\"multiple\",enableCellTextSelection:true,tooltipShowDelay:0,autoSizeStrategy:autoSizeStrategy,onGridReady:params=>{params.api.sizeColumnsToFit();params.api.autoSizeAllColumns(false);params.api.resetRowHeights();},onGridSizeChanged:params=>{params.api.sizeColumnsToFit();params.api.autoSizeAllColumns(false);params.api.resetRowHeights();},onGridColumnsChanged:params=>{params.api.sizeColumnsToFit();params.api.autoSizeAllColumns(false);params.api.resetRowHeights();},onRowDataUpdated:params=>{params.api.sizeColumnsToFit();params.api.autoSizeAllColumns(false);params.api.resetRowHeights();}})})]})})})]});});// // This line is changed from the original streamlit code\n// export default withStreamlitConnection(Leaderboard)\nexport default Leaderboard;","map":{"version":3,"names":["React","useMemo","useRef","useEffect","useState","Grid","AgGridReact","Box","Slider","ThemeProvider","createTheme","CssBaseline","getColumnDefs","getDateMarksFromTimestamps","getLeaderboard","styles","jsx","_jsx","jsxs","_jsxs","FONT_FAMILY","Leaderboard","memo","LeaderboardComponent","props","args","performances","models","date_marks","isMobileCompressed","setIsMobileCompressed","window","innerWidth","modelsDict","reduce","acc","model","model_repr","dateMarks","setDateMarks","dateStartAndEnd","setDateStartAndEnd","value","length","dateSliderHandleChange","event","newValue","newValueArray","newDf","newRowData","res","gridRef","current","api","forEachNode","node","dfData","find","row","data","newData","key","push","resTransaction","applyTransaction","update","dateLabelFormat","index","findIndex","mark","label","dateAriaText","leaderboard","forEach","numProblems","filter","result","columnNames","Object","keys","defaultColDef","flex","rowClassRules","leaderboardModelContaminated","params","rowData","setRowData","columnDefs","setColumnDefs","muiTheme","palette","mode","theme","base","typography","fontFamily","agGridTheme","gridStyle","height","concat","Math","min","overflow","margin","autoSizeStrategy","type","message","style","width","children","display","justifyContent","split","map","line","Fragment","sx","px","pt","pb","container","item","xs","onChange","valueLabelFormat","getAriaValueText","step","valueLabelDisplay","marks","max","flexDirection","alignItems","id","flexGrow","className","ref","rowSelection","enableCellTextSelection","tooltipShowDelay","onGridReady","sizeColumnsToFit","autoSizeAllColumns","resetRowHeights","onGridSizeChanged","onGridColumnsChanged","onRowDataUpdated"],"sources":["/Users/jojo/workspace/livemathbench.github.io/src/LeaderboardComp.tsx"],"sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\n\nimport React, { useCallback, useMemo, useRef, useEffect, useState } from \"react\"\nimport Grid from '@mui/material/Grid';\nimport { AgGridReact } from \"ag-grid-react\"\nimport \"ag-grid-community/styles/ag-grid.css\" // Core CSS\nimport \"ag-grid-community/styles/ag-theme-quartz.css\" // Theme\nimport \"./LeaderboardComp.css\"\nimport Box from \"@mui/material/Box\"\nimport Slider from \"@mui/material/Slider\"\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\"\nimport CssBaseline from \"@mui/material/CssBaseline\"\n\nimport {\n  getColumnDefs,\n  getDateMarksFromTimestamps,\n  getLeaderboard,\n} from \"./leaderboardLib\"\n\nimport \"./LeaderboardAgGrid.css\"\nimport styles from \"./Leaderboard.module.css\"\nconst FONT_FAMILY = \"'JetBrains Mono', monospace\"\n\nconst Leaderboard = React.memo(function LeaderboardComponent(props: any) {\n  // args from Streamlit\n  let args = props.args;\n  const { performances, models, date_marks } = args;\n\n\n  const [isMobileCompressed, setIsMobileCompressed] = useState(window.innerWidth < 768);\n\n  // const [data, setData] = useState(args);\n\n  // console.log(props)\n  // console.log(performances)\n  // console.log(models)\n\n\n\n\n  const modelsDict = useMemo(() => {\n    return models.reduce((acc: any, model: any) => {\n      acc[model.model_repr] = model\n      return acc\n    }, {})\n  }, [models])\n\n\n  // ********* DateSlider *********\n\n  // const dateMarks = getDateMarksFromTimestamps(date_marks)\n  const [dateMarks, setDateMarks] = React.useState(() => getDateMarksFromTimestamps(date_marks));\n\n  useEffect(() => {\n    // console.log('Component re-rendered due to changes in date_marks:', date_marks);\n    setDateMarks(getDateMarksFromTimestamps(date_marks));\n  }, [date_marks]);\n\n  const [dateStartAndEnd, setDateStartAndEnd] = React.useState<number[]>([\n    dateMarks[4].value, // Right now, this is 2023-05-01\n    dateMarks[dateMarks.length - 1].value,\n  ])\n\n\n  const dateSliderHandleChange = (\n    event: Event,\n    newValue: number | number[]\n  ) => {\n    const newValueArray = newValue as number[]\n    setDateStartAndEnd(newValueArray)\n\n    const newDf = getLeaderboard(\n      performances,\n      models,\n      newValueArray[0],\n      newValueArray[1]\n    )\n\n    const newRowData: any[] = []\n\n    const res = (gridRef.current as any).api.forEachNode(function (node: any) {\n      // Identify by the \"Model\" field\n      const dfData = newDf.find((row) => row[\"Model\"] === node.data[\"Model\"])!\n\n      const newData = node.data\n      for (const key in dfData) {\n        newData[key] = dfData[key as keyof typeof dfData]\n      }\n\n      newRowData.push(newData)\n    })\n\n    const resTransaction = (gridRef.current as any).api.applyTransaction({\n      update: newRowData,\n    })\n  }\n\n  function dateLabelFormat(value: number) {\n    const index = dateMarks.findIndex((mark) => mark.value === value)\n    return dateMarks[index].label\n  }\n\n  const dateAriaText = dateLabelFormat\n\n  // ********* AgGrid *********\n\n  // const leaderboard = getLeaderboard(\n  //   performances,\n  //   models,\n  //   dateStartAndEnd[0],\n  //   dateStartAndEnd[1]\n  // )\n\n  const leaderboard = useMemo(() => {\n    return getLeaderboard(\n      performances,\n      models,\n      dateStartAndEnd[0],\n      dateStartAndEnd[1]\n    );\n  }, [performances, models, dateStartAndEnd]);\n\n  if (isMobileCompressed) {\n    // remove columns from leaderboard\n    // remove Easy-Pass@1, Medium-Pass@1, Hard-Pass@1\n\n    // will delete throw error if column not found\n\n    leaderboard.forEach((row: any) => {\n      delete row[\"Middle-School-Pass@1\"];\n      delete row[\"High-School-Pass@1\"];\n      delete row[\"College-Pass@1\"];\n      delete row[\"High-School-Olympics-Pass@1\"];\n      delete row[\"Others-Pass@1\"];\n      // delete row[\"Pass@1 (no COT)\"];\n    });\n\n  }\n  // console.log(leaderboard)\n\n\n  const numProblems = performances.filter(\n    (result: any) =>\n      result[\"model\"] === \"Qwen2.5-Math-7B-Instruct\" &&\n      result[\"date\"] >= dateStartAndEnd[0] &&\n      result[\"date\"] <= dateStartAndEnd[1]\n  ).length;\n\n\n  // df is an array of objects\n  // Get the columns of df\n  const columnNames = useMemo(() => {\n    return Object.keys(leaderboard[0])\n  }, [leaderboard]);\n\n  // Object.keys(leaderboard[0])\n\n  const defaultColDef = useMemo(() => {\n    return {\n      flex: 1,\n    }\n  }, [])\n\n  const rowClassRules = useMemo(() => {\n    return {\n      [styles.leaderboardModelContaminated]: (params: any) =>\n        params.data[\"Contaminated\"],\n    }\n  }, [])\n\n  const gridRef = useRef()\n  const [rowData, setRowData] = useState(leaderboard)\n\n  useEffect(() => {\n    // console.log('Component re-rendered due to changes in leaderboard:', leaderboard);\n    setRowData(leaderboard);\n  }, [leaderboard]);\n\n  const [columnDefs, setColumnDefs] = useState(\n    getColumnDefs(columnNames, modelsDict)\n  )\n\n  useEffect(() => {\n    // console.log('Component re-rendered due to changes in column:', columnNames, modelsDict);\n    setColumnDefs(getColumnDefs(columnNames, modelsDict));\n  }, [columnNames, modelsDict]);\n\n\n  // console.log(columnNames, modelsDict);\n  // ********* Styles and return *********\n\n  const muiTheme = createTheme({\n    palette: {\n      mode: props.theme.base,\n    },\n    typography: {\n      fontFamily: FONT_FAMILY,\n    },\n  })\n\n  const agGridTheme =\n    props.theme.base === \"dark\" ? \"ag-theme-quartz-dark\" : \"ag-theme-quartz\"\n\n  const gridStyle = useMemo(\n    () => ({\n      height: `${Math.min(42 * rowData.length, 1000)}px`, // Adjust 600 to your desired max height\n      // height: \"100%\",\n      \"--ag-font-family\": FONT_FAMILY,\n      // minWidth: \"760px\",\n      // maxWidth: \"100%\",\n      // height: \"1250px\",\n      overflow: \"auto\",\n      margin: \"auto\",\n    }),\n    [rowData]\n  )\n\n\n  const autoSizeStrategy = {\n    type: 'fitCellContents'\n  }\n\n\n  let message = `${numProblems} problems selected in the current time window.`;\n\n  if (numProblems === 0) {\n    message = \"No problems selected in the current time window. Please select a different time window. \";\n  }\n  else if (numProblems < 100) {\n    message += \" Less than 100 problems selected. We recommend a larger time-window to get a more accurate leaderboard.\";\n  }\n  else {\n    message += \"You can change start or end date to change the time window.\";\n  }\n\n  message += \"<br><br>We estimate cutoff dates based on release date and performance variation. Models highlighted in red are likely contaminated on some fraction of the problems in the given time-window. Feel free to adjust the slider to see the leaderboard at different time windows. Please offer feedback if you find any issues!\"\n\n\n\n  return (\n    <div style={{ width: \"100%\", height: \"100%\" }}>\n      <ThemeProvider theme={muiTheme}>\n        <CssBaseline />\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <b>{message.split(\"<br>\").map((line, index) => (\n            <React.Fragment key={index}>\n              {line}\n              <br />\n            </React.Fragment>\n          ))}</b>\n        </div>\n\n\n        <Box sx={{ width: \"100%\" }} px={6} pt={5} pb={2}>\n\n          <Grid container justifyContent=\"center\">\n            <Grid item xs={12}>\n\n              <Slider\n                aria-label=\"Date Slider\"\n                value={dateStartAndEnd}\n                onChange={dateSliderHandleChange}\n                valueLabelFormat={dateLabelFormat}\n                getAriaValueText={dateAriaText}\n                step={null}\n                valueLabelDisplay=\"on\"\n                marks={dateMarks}\n                min={dateMarks[0].value}\n                max={dateMarks[dateMarks.length - 1].value}\n              />\n            </Grid>\n          </Grid>\n        </Box>\n      </ThemeProvider>\n      <div\n        style={{\n          display: numProblems === 0 ? \"none\" : \"flex\"\n          ,\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }}\n      >\n        <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\", width: \"100%\" }} id='flexGridWrapper'>\n          <div style={{ flexGrow: \"1\", width: \"100%\", display: \"flex\", justifyContent: \"center\" }}> {/* Center the grid */}\n            <div style={gridStyle} className={agGridTheme}>\n              {/* @ts-ignore */}\n\n              <AgGridReact\n                ref={gridRef}\n                rowData={rowData}\n                columnDefs={columnDefs}\n                defaultColDef={defaultColDef}\n                rowClassRules={rowClassRules}\n                rowSelection={\"multiple\"}\n                enableCellTextSelection={true}\n                tooltipShowDelay={0}\n                autoSizeStrategy={autoSizeStrategy}\n                onGridReady={(params) => {\n                  params.api.sizeColumnsToFit()\n                  params.api.autoSizeAllColumns(false)\n                  params.api.resetRowHeights()\n                }}\n                onGridSizeChanged={(params) => {\n                  params.api.sizeColumnsToFit()\n                  params.api.autoSizeAllColumns(false)\n                  params.api.resetRowHeights()\n                }}\n                onGridColumnsChanged={(params) => {\n                  params.api.sizeColumnsToFit()\n                  params.api.autoSizeAllColumns(false)\n                  params.api.resetRowHeights()\n                }}\n                onRowDataUpdated={(params) => {\n                  params.api.sizeColumnsToFit()\n                  params.api.autoSizeAllColumns(false)\n                  params.api.resetRowHeights()\n                }}\n\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div >\n  )\n});\n\n// // This line is changed from the original streamlit code\n// export default withStreamlitConnection(Leaderboard)\nexport default Leaderboard\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}